package com.jobseeker.service;

import java.time.LocalDate;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.jobseeker.beans.JobBean;
import com.jobseeker.entity.JobApplications;
import com.jobseeker.entity.JobSeeker;
import com.jobseeker.exception.JobDeadLinePassedException;
import com.jobseeker.exception.JobNotFoundException;
import com.jobseeker.exception.JobSeekerIdNotFoundException;
import com.jobseeker.repository.JobApplicationsRepository;
import com.jobseeker.repository.JobseekerRepository;

import jakarta.transaction.Transactional;

@Service
public class JobApplicationsService {

	@Autowired
	private JobApplicationsRepository jobApplicationsRepository;

	@Autowired
	private JobseekerRepository jobseekerRepository;

	@Autowired
	private RestTemplate restTemplate;

	@Transactional
	public void applyToJob(Long jobId, Long jobseekerId)
			throws JobSeekerIdNotFoundException, JobNotFoundException, JobDeadLinePassedException {
			JobSeeker jobseeker = jobseekerRepository.findById(jobseekerId).orElse(null);
			if (jobseeker == null)
				throw new JobSeekerIdNotFoundException("No jobseeker profile found for jobseekerId : " + jobseekerId);
			JobBean job = restTemplate.getForObject("http://localhost:8085/job/" + jobId, JobBean.class);
			
			if (job == null)
				throw new JobNotFoundException("No job found for jobId : " + jobId);

			if (job.getApplicationDeadline().isBefore(LocalDate.now()))
				throw new JobDeadLinePassedException("Sorry, cannot apply as application Deadline is crossed");
			
				JobApplications jobApplication = new JobApplications();

				jobApplication.setJobId(jobId);
				jobApplication.setJobseeker(jobseeker);

				jobApplicationsRepository.save(jobApplication);


	}

}
